mypipe {

  # binlog position saver
  pos-saver = "mypipe.api.binlog.ZookeeperBinlogPositionSaver"

  # zookeeper
  zk {
    path-prefix = "/mypipe"
    conn = "192.168.32.88:2181,192.168.32.41:2181,192.168.32.42:2181,192.168.32.43:2181,192.168.32.53:2181"
    max-retry-seconds = 10
  }

  # directories
  data-dir = "/tmp/mypipe"
  log-dir = "/tmp/mypipe"

  # grace time when shutting down application
  # for producers to flush their data
  shutdown-wait-time-seconds = 300

  # how often the producers flush their data
  flush-interval-seconds = 10

  # whether or not to respect transactional boundaries
  # when sending changes to the producers.
  group-events-by-tx = true

  # whether or not to send consumers single mutations or
  # groups of mutations upon a commit of a transaction;
  # allowing consumers to handle all mutations in one shot.
  group-mutations-by-tx = true

  # controls what dbs and tables to consume. effectively, this is
  # treated as Scala code and is compiled at run time. both "db"
  # and "table" are String types. if this value is set to blank
  # then it will be ignored.
  # example (triple quote on purpose for inner quotes):
  # """ db == "mypipe" && table =="user" """
  include-event-condition = ""

  error {
    # error handler class, the default config based handler uses the
    # flags below to control it's behaviour
    handler.default.class = "mypipe.mysql.ConfigBasedErrorHandler"

    # whether or not to stop processing the binary log
    # on event handler failure
    quit-on-event-handler-failure = true

    # whether or not to stop processing the binary log
    # if mypipe fails to decode an event
    quit-on-event-decode-failure = true

    # whether or not to stop processing the binary log
    # on consumer listener failure
    quit-on-listener-failure = true

    # whether or not to quit upon encountering a commit
    # that does not contain mutation events
    # the commit might contain query events and this
    # error handler can be overridden for custom behaviour
    quit-on-empty-mutation-commit-failure = true
  }

  mysql {
    # prefix to use when generating mysql server ids
    server-id-prefix = 1456
    # heartbeat timeout when detecting availability
    heartbeat-timeout-millis = 500
    # heartbeat interval when detecting availability
    heartbeat-interval-millis = 1000
    # if exceed max retry, consider instance down
    heartbeat-max-retry = 5
    # put instance back to pool if it recovers
    do-recover-after-down = true
    # if do recover, do recover after seconds below
    seconds-before-recover-after-down = 600
  }
}

akka {
  log-dead-letters-during-shutdown = off
}

